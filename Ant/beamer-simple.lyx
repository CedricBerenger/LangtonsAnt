#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
%\usetheme{Warsaw}
\usetheme{Boadilla}
% or ...

\usecolortheme{orchid}
\setbeamertemplate{footline}[text line]{} % makes the footer EMPTY

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans lmss
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
A simple, yet stylish beamer presentation
\end_layout

\begin_layout Itemize
Suited for jotting a couple of slides, without needing the overhead of a
 document structure
\end_layout

\begin_layout Itemize
The presentation uses a (slightly customized) Boadilla theme and the LM
 Sans font
\end_layout

\begin_layout Itemize
The first page can be readily removed
\end_layout

\begin_layout Itemize
(I worked on finding a simple beamer arrangement after discovering that
 all the eye-candy in the Warsaw theme was particularly distracting for
 the audience.
 At the same time I needed a presentation with a very simple structure,
 just Frame titles or their absence and Frame content.)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Complexité de la fourmi de Langton
\end_layout

\begin_layout Subtitle
A.
 Gajardo, A.
 Moreira, E.
 Goles (2000)
\end_layout

\begin_layout Author
Cédric Bérenger 
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Give the names in the same order as the appear in the paper.
 
\end_layout

\begin_layout Itemize
Use the 
\begin_inset Quotes eld
\end_inset

Institute mark
\begin_inset Quotes erd
\end_inset

 inset (
\family sans
Insert\SpecialChar \menuseparator
Custom Insets\SpecialChar \menuseparator
InstituteMark
\family default
) only if the authors have different affiliations.
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Cédric Bérenger
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
- optional, use only with lots of authors
\end_layout

\begin_layout Plain Layout
- if there are really lots of authors, use 
\begin_inset Quotes eld
\end_inset

Author et al.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Date
AMU, Option MOCANA, 2016
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
MOCANA 2016
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo-filename}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
La fourmi de Langton: des règles simples...
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
\begin_inset Note Note
status open

\begin_layout Plain Layout
Frame subtitles are optional.
 Use upper- or lowercase letters.
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A title should summarize the slide in an understandable fashion for anyone
 how does not follow everything on the slide itself.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "65col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Itemize
Une fourmi évolue sur une grille 2D.
\end_layout

\begin_layout Itemize
Elle est représentée par une flêche 
\begin_inset Formula $\uparrow\downarrow\leftarrow\rightarrow$
\end_inset

.
\end_layout

\begin_layout Itemize
Elle se déplace en suivant la flêche.
\end_layout

\begin_layout Itemize
Lorsqu'elle se déplace:
\end_layout

\begin_deeper
\begin_layout Itemize
la couleur de la case courante s'inverse.
\end_layout

\begin_layout Itemize
la flèche est tournée de 90° :
\end_layout

\begin_deeper
\begin_layout Itemize
Vers la gauche si la case est blanche,
\end_layout

\begin_layout Itemize
Vers la droite si la case est noire.
\end_layout

\end_deeper
\end_deeper
\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/ColorCodeBig.png
	height 25page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Orientations.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Simulateur: 
\begin_inset CommandInset href
LatexCommand href
name " https://github.com/CedricBerenger/LangtonsAnt"
target " https://github.com/CedricBerenger/LangtonsAnt"

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
...
 Un Comportement complexe.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
La fourmi présente un comportement complexe:
\end_layout

\begin_layout Itemize
Initialement Symétrique,
\end_layout

\begin_layout Itemize
Puis Chaotique,
\end_layout

\begin_layout Itemize
Et Finalement Périodique: la fourmi s'enferme dans une 
\begin_inset Quotes fld
\end_inset

Autoroute
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "33col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Screenshots/Symetric.png
	width 30page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Symétrique (étape<500)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "33col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Screenshots/Chaotic.png
	width 30page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Chaotique (500< étape<10000)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "33col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Screenshots/Periodic.png
	width 30page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Périodique (étape>10000)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Folklore: Un résultat principal.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Theorem
\begin_inset ERT
status open

\begin_layout Plain Layout

[Cohen-Kung Theorem]
\end_layout

\end_inset

 La trajectoire de la fourmi de Langton est non bornée.
\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout

[Preuve (Par l'absurde)]
\end_layout

\end_inset

 Si la trajectoire est bornée, alors le comportement de la fourmi est périodique
 et est localisé dans une zone fixe.
 Pour que le comportement soit périodique, un état doit se répéter.
 Or s'il on considère les coins de la zone, on aboutit à une contradiction:
 la zone ne peut être fixe.
\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Conjecture de l'Autoroute
\end_layout

\end_inset


\end_layout

\begin_layout Block
Si le support est fini, on conjecture que la fourmi finit toujours par construir
e l'autoroute.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Vers la Construction de portes logiques: Les Chemins.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Les Chemins permettent de contrôler les déplacements de la fourmi.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/Paths.png
	width 20page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Exemple de chemin.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Vers la Construction de portes logiques: La graine de L'Autoroute.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Lorsque la fourmi à terminé son calcul, on l'emprisonne dans l'autoroute
 pour contrôler sa trajectoire à l'infini.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/HighWaySeed.png
	width 20page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Graine permettant de générer l'autoroute.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction de portes logiques: Principe.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Etats d'entrées/sorties codés par les états de cellules.
\end_layout

\begin_layout Itemize
La fourmi calcule en se déplaçant:
\end_layout

\begin_deeper
\begin_layout Itemize
L'état des cellules d'entrée modifie la trajectoire de la fourmi.
\end_layout

\begin_layout Itemize
Suivant la trajectoire adoptée, la fourmi écrit ou non sur les cellules
 de sortie par défaut à False.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/HowGatesWorks.png
	height 30pheight%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Schéma de fonctionnement d'une porte logique.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction de portes logiques: Les entrées / sorties.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Les Entrées se comportes comme des 
\emph on
commutateurs
\emph default
, orientant la fourmi sur des chemins différents en fonction de l'entrée.
\end_layout

\begin_layout Itemize
Les sorties sont à 
\emph on
False
\emph default
 par défaut.
 Si la fourmi suit le chemin d'une sortie, elle y écrit 
\emph on
True
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/Inputs.png
	width 75page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Schéma de fonctionnement des entrées / Sorties.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction de portes logiques: Les briques de bases.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/Crossings_Junctions_Schematic.png
	width 75page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Les croisements A,B,C, la jonction J et les chemin sont les briques de bases
 pour la création de portes logiques.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction des portes logiques: Les schémas de construction.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/GatePaths.png
	width 75page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Représentation schématique des portes logique.
 Les flèches représentent le déplacement de la fourmi dans les portes.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction de portes logiques: AND et NOT.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/AND_NOT.png
	width 75page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Construction des portes AND et NOT.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction de portes logiques: Cross,Copy, Duplicate.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/CROSS_COPY_Duplicate.png
	height 75pheight%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Construction des portes Cross, Copy et Duplicate.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Construction de circuits booléens
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Les portes logiques précédentes permettent de coder et de calculer nimporte
 quel circuit booléen fini.
\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Calcul d'un XOR
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/BuildAXOR.png
	height 50pheight%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Schéma d'assemblage d'une porte XOR (/(/a ^ /b) ^ (a ^ b)).
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Simulation d'automates cellulaires
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
La fonction de transition d'une cellule d'un automate cellulaire peu être
 calculée par un circuit booléen fini R.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Others/Article/CASimulator.png
	width 90page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Simulation d'automate cellulaire: Chaque ligne calcule un nouvel état global
 de l'automate.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Complexité de la fourmi de Langton
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
La fourmi de Langton admet des problèmes P-Difficiles:
\end_layout

\begin_deeper
\begin_layout Itemize
Le calcul d'un circuit booléen est un problème P-Complet,
\end_layout

\begin_layout Itemize
Ce problème se réduit polynomialement à la fourmi de Langton.
\end_layout

\end_deeper
\begin_layout Itemize
La fourmi de Langton est un Modèle de Calcul Universel (Nécessite un support
 infini):
\end_layout

\begin_deeper
\begin_layout Itemize
Le modèle est capable de simuler des automates cellulaires 1D (à etats quiescent
s),
\end_layout

\begin_layout Itemize
Il existe des automates cellulaires 1D à état quiescent capable de simuler
 une machine de turing universelle.
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\end_body
\end_document
